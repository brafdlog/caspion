name: Build/Release

on:
  pull_request:
    paths-ignore:
      - "nuxt/**"
  push:
    branches: master
    paths-ignore:
      - "nuxt/**"

jobs:
  release:

    runs-on: ${{ matrix.os }}

    # Platforms to build on/for
    strategy:
      max-parallel: 1
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    steps:
    - uses: actions/checkout@v1
    - name: Set version in Env
      shell: bash
      run: |
        package_version=`awk -F ':' '/version/ {print $2}' package.json | sed 's/\"//g' | sed 's/,//g' | sed 's/ //g'`
        echo "package_version=$package_version" >> $GITHUB_ENV
        echo "Version is $package_version"
    - uses: actions/github-script@0.3.0
      name: Check if current version is a published release (by release tag)
      id: check_release
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        # debug: true
        script: |
          const releases = await github.repos.listReleases({
            owner: 'brafdlog',
            repo: 'caspion'
          })
          // console.log(releases)
          const published_release_tags = releases.data.filter(release => !release.draft).map(release => release.tag_name)
          // console.log(published_release_tags)
          // github.event_name: ${{ github.event_name }}
          // github.ref: ${{ github.ref }}
          const isPushToMaster = ${{ startsWith(github.event_name, 'push') && github.ref == 'refs/heads/master' }}
          console.log('Is push to master: ' + isPushToMaster)
          const publishToRelease = !published_release_tags.includes('v${{ env.package_version }}') && isPushToMaster
          console.log('publishToRelease: ' + publishToRelease)
          return publishToRelease
    - name: Install Node.js, NPM and Yarn
      uses: actions/setup-node@v1
      with:
        node-version: 14.x
    - name: Install Snapcraft
      uses: samuelmeuli/action-snapcraft@06f69b882c878790b568f0247d623eaa49de2f3d
      # Only install Snapcraft  on Ubuntu
      if: startsWith(matrix.os, 'ubuntu')
      continue-on-error: true
      with:
        # Log in to  Snap Store
        snapcraft_token: ${{ secrets.snapcraft_token }}
    - name: Set 'publish' parameter
      shell: python
      run: |
        import os
        param = 'always' if '${{ steps.check_release.outputs.result }}' == 'true' else 'never'
        print("Will {} (for this run) publish files to draft release".format(param))
        with open(os.getenv('GITHUB_ENV'), 'a') as envFile: envFile.write('PUBLISH_PARAM=' + param)
    - name: Build & release Electron app
      shell: bash
      env:
        GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
        GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NODE_OPTIONS: --max-old-space-size=4096
        SEGMENT_WRITE_KEY: ${{ secrets.SEGMENT_WRITE_KEY }}
        SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
      run: |
        yarn
        yarn build --publish $PUBLISH_PARAM
    - name: Upload artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        # Artifact name
        name: ${{ matrix.os }}-artifact
        # Directory containing files to upload
        path: dist_electron
